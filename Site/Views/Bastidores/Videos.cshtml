@using PagedList
@using PagedList.Mvc
@using Site.Helpers
@model IPagedList<Site.Models.BastidoresMidias>



@section SEO{
    <meta name="DC.title" content="Bastidores da Redação - Vídeos - Rádio CompanyName  | A Rádio de Minas" />
    <meta property="og:title" content="Bastidores da Redação - Vídeos - Rádio CompanyName | A Rádio de Minas" />
    <meta property="og:type" content="website" />
    <meta property="og:description" content="" />
    <meta property="og:image" content="@Url.Content("~/images/ico-facebook.jpg")" />
    <meta property="og:url" content="@HttpContext.Current.Request.Url.AbsoluteUri" />
    <title>Bastidores da Redação - Vídeos - Rádio CompanyName | A Rádio de Minas</title>
}


<div class="wrapper-general center">
    <header class="nav-intern clearfix">
        <div class="buttons">
            <a class="bt-back" href="javascript:window.history.go(-1)"> <i class="fa fa-angle-left"></i> Voltar</a>
            Texto: <button class="more bt-resize">+</button> <button class="bt-resize minus">-</button>
        </div>
        <nav class="breadcumb">
            <a href="@Url.Action("Index","Home")">Home</a>
            <span>Vídeos</span>
        </nav>
    </header>

    <div class="row-grid clearfix">
        <div class="grid-9 main-grid">
            <h1 class="title-page">Vídeos</h1>
            <nav class="navs-upper">
                <a href="@Url.Action("Fotos","Bastidores")">Fotos</a>
                <a href="@Url.Action("Videos","Bastidores")" class="active">Vídeos</a>
            </nav>

            @if (Model != null && Model.Count>0)
            {
                <article class="big-article-gallery" id="galeria-grande">
                    <small class="date-post data-video">@Model[0].dataCadastro.ToShortDateString()</small>
                    <h2 class="title-medium big data-legenda">@Model[0].legenda</h2>


                    @if (Model[0].video)
                    {
                        <figure class="big-pic">
                            <div id="playerYoutube"></div>
                        </figure>
                    }
                    
                </article>
            }



            @if (Model != null && Model.Count > 1)
            {
                <section id="outros-albuns">
                    <h2 class="title-bottom">Outros Vídeos</h2>

                    <ul class="row-grid mb clearfix">

                        @foreach (var item in Model.OrderByDescending(x => x.dataCadastro).Skip(1))
                        {
                            <li class="grid-4">
                                <article>
                                    <a href="javascript:alterVideo('@item.midia','@item.legenda','@item.dataCadastro.ToShortDateString()');">
                                        <img class="pic-radius" src="https://i.ytimg.com/vi/@item.midia/hqdefault.jpg" alt="@item.legenda">
                                        <h3 class="title-normal">@item.legenda</h3>
                                    </a>

                                </article>
                            </li>

                        }
                        
                    </ul>

                </section>
            }


            <footer class="pagination-bottom">

                <ul class="pag">
                    @if (Model.PageCount > 1)
                    {
                        @Html.PagedListPager(Model, page => Url.Action("Videos", new { page }), new PagedListRenderOptions { LinkToNextPageFormat = "Próximo", LinkToPreviousPageFormat = "Anterior" })
                    }
                </ul>

            </footer>
        </div>


        @{Html.RenderAction("Sidebar", "Home");}
       
    </div>
</div> 
@section scripts{
    <script type="text/javascript">

        var tag = document.createElement('script');

        tag.src = "http://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);


        function onYouTubeIframeAPIReady() {
            player = new YT.Player('playerYoutube', {
                height: '500',
                width: '840',
                videoId: '@Model[0].midia',
                events: {
                    'onStateChange': onPlayerStateChange
                },
                playerVars: {
                    rel: 0,
                    wmode: "opaque"
                }
            });
        }

        function onPlayerStateChange(evt) {
            //if (evt.data == 0) {
            //    $('#video_popup').removeClass('hide_pop');
            //    $('#video_popup').addClass('display_pop');
            //}
            //else if (evt.data == -1) {
            //    $('#video_popup').removeClass('display_pop');
            //    $('#video_popup').addClass('hide_pop');
            //}
            //else {
            //    $('#video_popup').removeClass('display_pop');
            //    $('#video_popup').addClass('hide_pop');
            //}
        }


        function alterVideo(id_video,legenda,data) {
            player.loadVideoById({ 'videoId': '' + id_video + '', 'startSeconds': 0 });
            $(".data-video").html(data);
            $(".data-legenda").html(legenda);
            
        }

</script>



}