@using PagedList
@using PagedList.Mvc
@model IPagedList<Administrativo.Models.Ouvintes>

@{
    ViewBag.Title = "Listagem de Denúncia de Ouvintes";
    ViewBag.Icon = "fa fa-bell";
    ViewBag.SmallDescription = "Lista de denúncia de ouvintes cadastrados no sistema";
}
<div class="row">
    <div class="col-md-12">
        <div class="box box-info">
            <div class="box-header">
                <h3 class="box-title">Lista</h3>               
            </div>
            <div class="box-body no-padding">
                <div class="fc fc-ltr">
                    @using (Html.BeginForm())
                    {
                        <table class="fc-header" style="width: 35%;">
                            <tbody>
                                <tr style="height: 48px;">
                                    <td class="fc-header-left" style="width: 10px;"></td>
                                    <td class="fc-header-center">
                                        @Html.TextBox("Search", null, new { @class = "text-box", placeholder = "Busca" })
                                    </td>
                                    <td class="fc-header-right">
                                        <input type="submit" value="Enviar" class="btn bg-olive margin" style="margin: 0px;" />
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    }
                    <table class="table table-striped responsive table-hover dataTable">
                        <thead>
                            <tr role="row">
                                <th style="width:40px;" onclick="document.location='@Url.Action("Index", new { sortField = "id", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClassid">
                                    @Html.DisplayNameFor(model => model.First().id)
                                </th>
                                <th onclick="document.location='@Url.Action("Index", new { sortField = "nome", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClassnome">
                                    @Html.DisplayNameFor(model => model.First().nome)
                                </th>
                                <th onclick="document.location='@Url.Action("Index", new { sortField = "email", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClassemail">
                                    @Html.DisplayNameFor(model => model.First().email)
                                </th>
                                <th onclick="document.location='@Url.Action("Index", new { sortField = "assunto", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClassassunto">
                                    @Html.DisplayNameFor(model => model.First().assunto)
                                </th>                           
                                <th onclick="document.location='@Url.Action("Index", new { sortField = "DataCadastro", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClassDataCadastro">
                                    @Html.DisplayNameFor(model => model.First().DataCadastro)
                                </th>
                                <th style="width: 160px;">Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.TotalItemCount > 0)
                            {
                                foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.id)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.nome)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.email)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.assunto)
                                        </td>                                                                                                   
                                        <td>
                                            @Html.DisplayFor(modelItem => item.DataCadastro)
                                        </td>                                      
                                        <td>
                                            <div class="btn-group">
                                                <a href="javascript:Liberar('@item.id','@(item.liberado?"bloquear":"liberar")')" class="btn btn-info btn-small" title="@(item.liberado?"Bloquear":"Liberar")"><i class="fa @(item.liberado?"fa-lock":"fa-unlock") "></i></a>
                                                <a href="@Url.Action("Details", new { id = item.id })" class="btn bg-olive btn-small"><i class="fa fa-search-plus"></i></a>
                                                <a href="@Url.Action("Delete", new { id = item.id })" class="btn btn-danger btn-small"><i class="fa fa-trash-o"></i></a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="16" align="center">Nenhum registro encontrado.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="box-footer clearfix no-border">
                @if (Model.PageCount > 1)
                {
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, search = ViewBag.Search, order = ViewBag.Order, SortField = ViewBag.SortField }), PagedListRenderOptions.OnlyShowFivePagesAtATime)
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
   <script type="text/javascript">
       
       var Liberar = function (id,acao) {

               swal({
                   title: 'Atenção',
                   html: "Deseja mesmo <b>"+acao+"</b> este item?<br><br><em>Itens ativados serão exibidos no site</em>",
                   type: 'warning',
                   showCancelButton: true,
                   confirmButtonColor: '#DD6B55',
                   confirmButtonText: 'Sim',
                   cancelButtonText: 'Não',
                 
               }).then(function () {
                   
                   $.ajax({
                       url: "@Url.Action("AtivarDesativar", "Ouvintes")",
                       type: "GET",
                       data:{id:id },
                       success: function (data) {
                           location.reload();
                       }
                   });



               }, function (dismiss) {
                   if (dismiss === 'cancel') {

                   }
               })




       };
           
       
    </script>
}