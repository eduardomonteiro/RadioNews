@using PagedList
@using PagedList.Mvc
@model IPagedList<Administrativo.Models.MateriaNovidades>




@{
		ViewBag.Title = "Listagem de Novidades";
		ViewBag.Icon = "fa ";
		ViewBag.SmallDescription = "Lista de todos os Novidades cadastrados no sistema";

    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="row">
    <div class="col-md-12">
		  <div class="box box-info">
            <div class="box-header">
				<h3 class="box-title">Lista</h3>
                <div class="pull-right">
                    <a style="margin:4px; color:white;" href="@Url.Action("Create")" class="btn btn-success pull-right"><i class="fa fa-plus-circle white"></i>&nbsp;Cadastrar</a>
                </div>
			</div>
            <div class="box-body no-padding">
				<div class="fc fc-ltr">
					@using (Html.BeginForm())
						{
							<table class="fc-header" style="width: 35%;">
								<tbody>
									<tr style="height: 48px;">
										<td class="fc-header-left" style="width: 10px;"></td>
										<td class="fc-header-center">
											@Html.TextBox("Search", null, new { @class = "text-box", placeholder = "Busca" })
										</td>
										<td class="fc-header-right">
											<input type="submit" value="Enviar" class="btn bg-olive margin" style="margin: 0px;" />
										</td>
									</tr>
								</tbody>
							</table>
						}
						<table class="table table-striped responsive table-hover dataTable">
								<thead>
								 <tr role="row">
							
									<th style="width:40px;" onclick="document.location='@Url.Action("Index", new { sortField = "id", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClassid">
										@Html.DisplayNameFor(model => model.First().id)
									</th>
							
									<th onclick="document.location='@Url.Action("Index", new { sortField = "idMateria", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClassidMateria">
										@Html.DisplayNameFor(model => model.First().idMateria)
									</th>
							
									<th onclick="document.location='@Url.Action("Index", new { sortField = "status", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClassstatus">
										@Html.DisplayNameFor(model => model.First().status)
									</th>
							
									<th onclick="document.location='@Url.Action("Index", new { sortField = "dataPrograma", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClassdataPrograma">
										@Html.DisplayNameFor(model => model.First().dataPrograma)
									</th>
							
									<th onclick="document.location='@Url.Action("Index", new { sortField = "novidades", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClassnovidades">
										@Html.DisplayNameFor(model => model.First().novidades)
									</th>
							
									<th onclick="document.location='@Url.Action("Index", new { sortField = "audio", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClassaudio">
										@Html.DisplayNameFor(model => model.First().audio)
									</th>
							
									<th onclick="document.location='@Url.Action("Index", new { sortField = "dataCadastro", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClassdataCadastro">
										@Html.DisplayNameFor(model => model.First().dataCadastro)
									</th>
							
									<th onclick="document.location='@Url.Action("Index", new { sortField = "excluido", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClassexcluido">
										@Html.DisplayNameFor(model => model.First().excluido)
									</th>
							
									<th style="width: 160px;">Ações</th>
								</tr>
								</thead>
							<tbody>
							@if (Model.TotalItemCount > 0)
								{
							foreach (var item in Model) {
								<tr>
							
									<td>
										@Html.DisplayFor(modelItem => item.id)
									</td>
							
									<td>
										@Html.DisplayFor(modelItem => item.Materia.titulo)
									</td>
							
									<td>
										@Html.DisplayFor(modelItem => item.status)
									</td>
							
									<td>
										@Html.DisplayFor(modelItem => item.dataPrograma)
									</td>
							
									<td>
										@Html.DisplayFor(modelItem => item.novidades)
									</td>
							
									<td>
										@Html.DisplayFor(modelItem => item.audio)
									</td>
							
									<td>
										@Html.DisplayFor(modelItem => item.dataCadastro)
									</td>
							
									<td>
										@Html.DisplayFor(modelItem => item.excluido)
									</td>
							
									<td>
									<div class="btn-group">
										<a href="@Url.Action("Edit", new { id = item.id })" class="btn btn-warning btn-small"><i class="fa fa-edit"></i></a>
										<a href="@Url.Action("Details", new { id = item.id })" class="btn bg-olive btn-small"><i class="fa fa-search-plus"></i></a>
										<a href="@Url.Action("Delete", new { id = item.id })" class="btn btn-danger btn-small"><i class="fa fa-trash-o"></i></a>
									</div>
									</td>
							
								</tr>
							}
							}
								else
								{ 
									<tr>
										<td colspan="9" align="center">Nenhum registro encontrado.</td>
									</tr>
								}
						</tbody>
					</table>
				</div>
			</div>
			<div class="box-footer clearfix no-border">
					@if (Model.PageCount > 1)
					{ 
						@Html.PagedListPager(Model, page => Url.Action("Index", new { page, search = ViewBag.Search, order = ViewBag.Order, SortField =  ViewBag.SortField}), PagedListRenderOptions.OnlyShowFivePagesAtATime)
					}
			</div>
		</div>
	</div>
</div>



