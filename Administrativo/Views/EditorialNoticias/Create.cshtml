@model Administrativo.Models.Noticias

@{
    ViewBag.Title = "Cadastrar Notícia - " + ViewBag.Editorial.nome;
    ViewBag.Icon = "fa ";
    ViewBag.SmallDescription = "Insere uma notícia de " + ViewBag.Editorial.nome + " no sistema";
}



<div class="content">
    <div class="row">
        <div class="box">
            <div class="box-header">
                <h3 class="box-title">Cadastrar Notícia - @ViewBag.Editorial.nome</h3>
            </div>
            @using (Html.BeginForm("Create", "EditorialNoticias", new { editorial = ViewBag.EditorialChave }, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="box-body">

                    @Html.ValidationSummary()

                    <h4 class="page-header"></h4>

                    <h4 class="page-header">
                        Configurações
                        <small>Define onde a notícia será exibida</small>
                    </h4>

                    <div class="form-group">
                        <table style="width:100%">
                            <tr>
                                <td>
                                    @Html.LabelFor(model => model.destaque)

                                    @Html.EditorFor(model => model.destaque)
                                    @Html.ValidationMessageFor(model => model.destaque)
                                </td>
                                <td>
                                    @Html.LabelFor(model => model.destaqueHome)

                                    @Html.EditorFor(model => model.destaqueHome)
                                    @Html.ValidationMessageFor(model => model.destaqueHome)
                                </td>
                                <td>
                                    @Html.LabelFor(model => model.DestaqueHomeMenor)

                                    @Html.EditorFor(model => model.DestaqueHomeMenor)
                                    @Html.ValidationMessageFor(model => model.DestaqueHomeMenor)
                                </td>
                                <td>
                                    @Html.LabelFor(model => model.plantao)

                                    @Html.EditorFor(model => model.plantao)
                                    @Html.ValidationMessageFor(model => model.plantao)
                                </td>
                                <td>
                                    @Html.LabelFor(model => model.assuntoSemana)

                                    @Html.EditorFor(model => model.assuntoSemana)
                                    @Html.ValidationMessageFor(model => model.assuntoSemana)
                                </td>
                                <td>
                                    <label>Banner das Editorias Especiais</label>

                                    @Html.EditorFor(model => model.destaqueEditoria)
                                    @Html.ValidationMessageFor(model => model.destaqueEditoria)
                                </td>
                            </tr>
                        </table>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.titulo)

                        @Html.EditorFor(model => model.titulo)
                        @Html.ValidationMessageFor(model => model.titulo)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.texto)

                        @Html.TextAreaFor(model => model.texto)
                        @Html.ValidationMessageFor(model => model.texto)
                    </div>

                    <div class="form-group div-hora">
                        <label>Programar matéria</label>
                        @Html.EditorFor(model => model.dataAtualizacao, new { @class = "form-control datepicker" })
                        Html.ValidationMessageFor(model => model.dataAtualizacao)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.chamada)

                        @Html.TextAreaFor(model => model.chamada, new { @class = "text-box", style = "height: 100px;" })
                        @Html.ValidationMessageFor(model => model.chamada)
                    </div>

                    <h4 class="page-header"></h4>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.foto)

                                <input type="file" name="foto" id="foto" />
                                @Html.ValidationMessageFor(model => model.foto)
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="form-group">
                                @Html.LabelFor(model => model.fotoDescricao)

                                @Html.EditorFor(model => model.fotoDescricao)
                                @Html.ValidationMessageFor(model => model.fotoDescricao)
                            </div>

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.audio)

                        <input type="file" name="audio" id="audio" />
                        @Html.ValidationMessageFor(model => model.audio)
                    </div>
                    <h4 class="page-header"></h4>
                    <h4 class="page-header">
                        Localização e Exibição
                        <small>Selecione um ponto no mapa, a região e a categoria.</small>
                    </h4>
                    <div class="form-group">
                        <div class="input-group addon-left">
                            <a class="input-group-addon" href="javascript:;">
                                <i class="icon-search"></i>
                            </a>
                            @Html.TextBox("txtEnderecoDestino", null, new { @placeholder = "Digite aqui o endereço de origem...", @class = "text-box" })
                        </div>
                        <div id="mapa" style="height: 350px;"></div>
                        @Html.HiddenFor(model => model.latitude)
                        @Html.HiddenFor(model => model.longitude)
                        @Html.ValidationMessageFor(model => model.latitude)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RegiaoId, "Região")

                        @Html.DropDownList("RegiaoId", null, "Selecione...", new { @class = "chosen-select" })

                        @Html.ValidationMessageFor(model => model.RegiaoId)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoriaMapaId, "Categoria")

                        @Html.DropDownList("CategoriaMapaId", null, "Selecione...", new { @class = "chosen-select" })

                        @Html.ValidationMessageFor(model => model.CategoriaMapaId)
                    </div>
                  


                    <div class="form-group">
                        Categoria

                        @Html.DropDownList("CategoriaId", null,"Selecione...", new { @class = "chosen-select" })
                        @Html.ValidationMessage("CategoriaId")
                    </div>


                    <h4 class="page-header"></h4>
                    <h4 class="page-header">
                        Fotos e Vídeos
                        <small>Selecione uma galeria já cadastrada e/ou um vídeo do YouTube.</small>
                    </h4>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idGaleria, "Galeria")

                        @Html.DropDownList("idGaleria", null, "Selecione...", new { @class = "chosen-select" })

                        @Html.ValidationMessageFor(model => model.idGaleria)
                    </div>



                    <div class="form-group">
                        

                        <div class="row">
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.videoYoutube)

                                @Html.EditorFor(model => model.videoYoutube)
                                @Html.ValidationMessageFor(model => model.videoYoutube)
                            </div>
                            <div class="col-md-6">
                                <div class="callout callout-warning">
                                    <h4>Exemplo: (usar apenas o que está em negrito)</h4>
                                    <p>https://www.youtube.com/watch?v=<strong>2Tkz7wNGr-A</strong></p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        Exibir o @Html.LabelFor(model => model.videoDestaqueHome)

                        @Html.EditorFor(model => model.videoDestaqueHome)
                        @Html.ValidationMessageFor(model => model.videoDestaqueHome)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Tags)
                        @Html.ListBox("TagsIds", (MultiSelectList)ViewBag.MultiSelectTags, new { @class = "chosen-select" })

                    </div>

                    <div class="form-group">
                        <label>Ativo?</label>
                        @Html.BooleanFieldFor(model => model.liberado, Model.liberado, new { @class = "form-control", style = "width: 120px;" })
                        @Html.ValidationMessageFor(model => model.liberado)
                    </div>

                </div>
                <div class="box-footer">
                    <input type="submit" value="Salvar" class="btn btn-success" />
                    <a href="@Url.Action("Index", "EditorialNoticias", new { editorial = ViewBag.Editorial.chave })" class="btn btn-info">Voltar</a>

                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places");
<script src="~/Scripts/ValidadorJqueryPT-BR-DataHora.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            var editor = CKEDITOR.replace('texto',
                {
                    height: "200px"
                });
            //$("#dataAtualizacao").rules("remove", "required")
            $('#chamada').wysihtml5();

            $("#horario").inputmask("99:99");
            $(".chosen-select").chosen({ width: "100%" });
            mapaNoticias.init();
            youtube.init();
        });
        
    </script>
}
