@using PagedList
@using PagedList.Mvc
@model IPagedList<Administrativo.Models.UserProfile>



@{
    ViewBag.Title = "Usuários";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-md-12">
        <div class="box box-info">
            <div class="box-header">
                <h3 class="box-title">Lista</h3>
                <div class="pull-right">
                    <a style="margin:4px; color:white;" href="@Url.Action("Cadastrar")" class="btn btn-success pull-right"><i class="fa fa-plus-circle white"></i>&nbsp;Cadastrar</a>
                </div>
            </div>
            <div class="box-body no-padding">
                <div class="fc fc-ltr">
                    @using (Html.BeginForm())
                    {
                        <table class="fc-header" style="width: 35%;">
                            <tbody>
                                <tr style="height: 48px;">
                                    <td class="fc-header-left" style="width: 10px;"></td>
                                    <td class="fc-header-center">
                                        @Html.TextBox("Search", null, new { @class = "text-box", placeholder = "Busca" })
                                    </td>
                                    <td class="fc-header-right">
                                        <input type="submit" value="Enviar" class="btn btn-success" style="margin: 0px;" />
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    }
                    <table class="table table-striped responsive table-hover dataTable">
                        <thead>
                            <tr role="row">
                                <th onclick="document.location='@Url.Action("Index", new { sortField = "UserName", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClasstitulo">
                                    @Html.DisplayNameFor(model => model.First().UserName)
                                </th>
                                <th>É Colunista?</th>
                                <th style="width: 160px;">Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.TotalItemCount > 0)
                            {
                                foreach (var item in Model)
                                {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.UserName)
                                    </td>  
                                    <td>
                                        @(item.ColunistaId.HasValue?"Sim":"Não")
                                    </td>  
                                    <td>
                                        <a href="@Url.Action("Editar", new { id = item.UserId })" class="btn btn-warning btn-small"><i class="fa fa-edit"></i></a>
                                        <a href="@Url.Action("Delete", new { id = item.UserId })" class="btn btn-danger btn-small"><i class="fa fa-trash-o"></i></a>
                                        <a onclick="AlterarSenha(@item.UserId)" class="btn btn-info btn-small"><i class="fa fa-lock"></i></a>
                                    </td>
                                </tr>
                                }
                            }
                            else
                            { 
                                <tr>
                                    <td colspan="2" style="text-align:center;">Nenhum registro encontrado.</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
            </div>
            <div class="box-footer clearfix no-border">
                @if (Model.PageCount > 1)
                { 
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, search = ViewBag.Search, order = ViewBag.Order, SortField = ViewBag.SortField }), PagedListRenderOptions.OnlyShowFivePagesAtATime)
                }

            </div>
        </div>
    </div>


@section scripts {
    <script>
        function AlterarSenha(userId) {
            swal({
                title: 'Alterar Senha',
                html:
                  '<form id="formAlterarSenha" class="margin">' +
                  '@Html.AntiForgeryToken()' +
                  '<input type="hidden" name="id" value="' + userId + '">' +
                  '@Html.Label("Antiga Senha", new { @class = "pull-left"})' +
                  '@Html.Password("antiga", null, new { @id = "antiga", @class = "swal2-input", @autofocus = true })' +
                  '@Html.Label("Senha", new { @class = "pull-left" })' +
                  '@Html.Password("senha", null, new { @id = "senha", @class = "swal2-input" })' +
                  '@Html.Label("Repita a senha", new { @class = "pull-left" })' +
                  '@Html.Password("confirmar", null, new { @id = "confirmar", @class = "swal2-input" })' +
                  '</form>',
                preConfirm: function () {
                    return new Promise(function (resolve, reject) {
                        setTimeout(function () {
                            if (!$('#antiga').val() || !$('#senha').val() || !$('#confirmar').val()) {
                                reject('Entre com os valores corretamente.')
                            } else if ($('#senha').val() != $('#confirmar').val()) {
                                reject('As senhas não conferem.')
                            } else {
                                resolve()
                            }
                        }, 1000)
                    })
                }
            }).then(function (result) {

                $.ajax({
                    url: "@Url.Action("AlterarSenha", "Usuarios")",
                    data: $("#formAlterarSenha").serialize(),
                    type: 'POST',
                    success: function (result) {
                        if (result) {
                            swal('Sucesso', 'Senha alterada com sucesso.', 'success');
                        } else {
                            swal('Ooops', 'Senha atual incorreta!', 'error');
                        }
                    },
                    error: function (a, b, c) {
                        swal('Ooops', 'Ocorreu um erro interno, contate o administrador do sistema!', 'error');
                    }
                });

                result(response.data);
            });
        }
    </script>
    
    }