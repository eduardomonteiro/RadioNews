@using PagedList
@using PagedList.Mvc
@model IPagedList<Administrativo.Models.Comentarios>

@{
    ViewBag.Title = "Lista de Comentários";
    ViewBag.Icon = "fa fa-comment-o";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>

    .mailbox .table-mailbox tr > td {
        white-space: normal;
    }

</style>

<div class="col-md-12">
    <div class="box box-danger">
        <div class="box-header">
            <h3 class="box-title">Lista comentários</h3>
            <div class="pull-right">

            </div>
        </div>
        <div class="box-body no-padding">
            <div class="fc fc-ltr mailbox">
                <ul class="nav nav-tabs" style="margin-bottom:10px">
                    <li class="active"><a href="#">Busca</a></li>
                    <li><a href="#" onclick="trocaPagina('70919')">Copa CompanyName</a></li>
                    <li><a href="#" onclick="trocaPagina('70920')">Troféu Guará</a></li>
                </ul>
                @Html.Hidden("noticiaId", (int?)ViewBag.Noticia)
                @using (Html.BeginForm("Index", "Comentarios", FormMethod.Get))
                {
                    <div class="row" style="margin-left:2px; margin-right:2px;">
                        <div class="col-md-4">
                            @Html.TextBox("Search", null, new { @class = "text-box", placeholder = "Busca", })
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownList("editoriaId", (SelectList)ViewBag.Comentarios.Editorias, "Editoria", new { @class = "form-control", @onChange = "listaUnica()" })
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownList("colunistaId", (SelectList)ViewBag.Comentarios.Colunistas, "Colunista", new { @class = "form-control", @onChange = "listaUnica()" })
                        </div>
                        <div class="col-md-2">
                            <input type="submit" value="Enviar" class="btn bg-olive" />
                        </div>
                    </div>
                }
                <table class="table table-responsive responsive dataTable table-mailbox">
                    <thead>
                        <tr role="row">
                            <th onclick="document.location='@Url.Action("Index", new { sortField = "Id", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search, noticiaId = ViewBag.Noticia, colunistaId = ViewBag.Colunista, editoriaId = ViewBag.Editoria })'" class="@ViewBag.SortClassId">
                                @Html.DisplayNameFor(model => model.First().Id)
                            </th>
                            @*<th onclick="document.location='@Url.Action("Index", new { sortField = "assunto", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search })'" class="@ViewBag.SortClassassunto">
                                    @Html.DisplayNameFor(model => model.First().assunto)
                                </th>*@
                            <th onclick="document.location='@Url.Action("Index", new { sortField = "Nome", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search, noticiaId = ViewBag.Noticia, colunistaId = ViewBag.Colunista, editoriaId = ViewBag.Editoria })'" class="@ViewBag.SortClassNome">
                                @Html.DisplayNameFor(model => model.First().Nome)
                            </th>
                            <th onclick="document.location='@Url.Action("Index", new { sortField = "DataCadastro", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search, noticiaId = ViewBag.Noticia, colunistaId = ViewBag.Colunista, editoriaId = ViewBag.Editoria })'" class="@ViewBag.SortClassDataCadastro">
                                @Html.DisplayNameFor(model => model.First().DataCadastro)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.First().Texto)
                            </th>
                            <th>
                                Área
                            </th>
                            <th>
                                Notícia
                            </th>
                            <th onclick="document.location='@Url.Action("Index", new { sortField = "Status", order = @ViewBag.Order == "DESC" ? "ASC" : "DESC", page = ViewBag.Page, search = ViewBag.Search, noticiaId = ViewBag.Noticia, colunistaId = ViewBag.Colunista, editoriaId = ViewBag.Editoria })'" class="@ViewBag.SortClassStatus">
                                Status
                            </th>
                            <th style="width: 160px;">Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.TotalItemCount > 0)
                        {
                            foreach (var item in Model)
                            {
                                <tr id="@item.Id">
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Id)
                                    </td>
                                    @*<td>
                                            @Html.DisplayFor(modelItem => item.assunto)
                                        </td>*@
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Nome)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DataCadastro)
                                    </td>
                                    <td>
                                        @(item.Texto.Length > 45 ? item.Texto.Substring(0, 45) + "..." : item.Texto)
                                    </td>
                                    <td>
                                        @Html.Raw(item.Area)
                                    </td>
                                    <td>
                                        <a style="color: #0000EE" href="@("http://" + HttpContext.Current.Request.Url.Authority.Replace("admin/", string.Empty))/@(item.Noticias.Colunista != null ? "blog/"+item.Noticias.Colunista.chave+"/" : "noticia/")@Html.Raw(item.Noticias.url)" target="_blank">@Html.Raw(item.Noticias.url)</a> 
                                    </td>
                                    <td class="status">
                                        @(item.Bloqueado ? "Bloqueado" : "Liberado")
                                    </td>
                                    <td>
                                        <div class="btn-group">
                                            <a href="@Url.Action("Detalhes", new { id = item.Id })" class="btn bg-olive btn-small"><i class="fa fa-search-plus"></i></a>
                                            <btn onclick="bloquearComentario(@item.Id)" class="btn btn-warning btn-small"><i class="fa @(item.Bloqueado ? "fa-unlock" : "fa-lock") cadeado"></i></btn>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="12" align="center">Nenhum registro encontrado.</td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
        <div class="box-footer clearfix no-border">
            @if (Model.PageCount > 1)
            {
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, search = ViewBag.Search, order = ViewBag.Order, SortField = ViewBag.SortField, noticiaId = ViewBag.Noticia, colunistaId = ViewBag.Colunista, editoriaId = ViewBag.Editoria }), PagedListRenderOptions.OnlyShowFivePagesAtATime)
            }

        </div>
    </div>
</div>


@section scripts
{
    <script>

        function trocaPagina(id) {
            window.location = "Comentarios?noticiaId=" + id;
        };
        function listaUnica() {
            if ($('#colunistaId')[0].selectedIndex > 0) {
                $('#editoriaId')[0].selectedIndex = 0;
                $('#editoriaId')[0].disabled = true;
            } else {
                $('#editoriaId')[0].disabled = false;
            }
            if ($('#editoriaId')[0].selectedIndex > 0) {
                $('#colunistaId')[0].selectedIndex = 0;
                $('#colunistaId')[0].disabled = true;
            } else {
                $('#colunistaId')[0].disabled = false;
            }
        }

        $(document).ready(function () {
            listaUnica();
        })

        function bloquearComentario(idComentario)
        {
            $.ajax({
                url: "@Url.Action("Bloquear", "Comentarios")",
                data: { id: idComentario },
                type: "post",
                dataType: "json",
                success: function () {
                   toggleBloqueio(idComentario);
                }
            });
        }

        function toggleBloqueio(id)
        {
            var cadeado = $("#" + id).find(".cadeado");
            var status = $("#" + id).find(".status");

            if ($(status).html().trim() == "Bloqueado") {
                $(status).html("Liberado");
                $(cadeado).removeClass("fa-unlock");
                $(cadeado).addClass("fa-lock");
            } else {
                $(status).html("Bloqueado");
                $(cadeado).removeClass("fa-lock");
                $(cadeado).addClass("fa-unlock");
            }
        }

    </script>
}